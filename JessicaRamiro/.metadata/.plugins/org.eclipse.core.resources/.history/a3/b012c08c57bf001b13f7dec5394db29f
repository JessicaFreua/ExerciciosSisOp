package jantar;

public class Filosofo extends Thread {
	
	private int id;
	
	final int PENSANDO = 0;
	final int COMFOME = 1;
	final int COMENDO = 2;
	
	public Filosofo (String nome, int id) {
		super(nome);
		this.id = id;
	}
	
	public void ComFome() {
		
		Mesa.situacao[this.id] = 1;
		System.out.println("O Filosofo " + getName() + " esta com fome.");
	}
	
	public void Comendo() {
		
		Mesa.situacao[this.id] = 2;
		System.out.println("O Filosofo " + getName() + " esta comendo.");
		
		try {
			Thread.sleep(1000L);
			
		} catch (InterruptedException ex) {
			System.out.println("ERRO" + ex.getMessage());
		}
	}
	
	public void Pensando() {
		
		Mesa.situacao[this.id] = 0;
		System.out.println("O Filosofo " + getName() + " esta pensando.");
		
		try {
			Thread.sleep(1000L);
			
		} catch (InterruptedException ex) {
			System.out.println("ERRO" + ex.getMessage());
		}
	}
	
	public void LargarOGarfo() {
		
		Mesa.mutex.decrementar();
		
		Pensando();
		
		Mesa.filosofo[FilosofoEsquerda()].TentarPegarGarfos();
		Mesa.filosofo[FilosofoDireita()].TentarPegarGarfos();
		
		Mesa.mutex.incrementar();
	}
	
	public void PegarOGarfo() {
		
		Mesa.mutex.incrementar();
		
		ComFome();
		
		TentarPegarGarfos();
		
		Mesa.mutex.incrementar();
		
		Mesa.semaforos[this.id].decrementar();
	}
	
	public void TentarPegarGarfos() {
		
		if(Mesa.situacao[this.id] == 1
		  && Mesa.situacao[FilosofoEsquerda()] != 2
		  && Mesa.situacao[FilosofoDireita()] !=2) {
			
			Comendo();
			
			Mesa.semaforos[this.id].incrementar();
		}
	}
	
	@Override
	public void run () {
		
		try {
			
			Pensando();
			
			do {
				
				PegarOGarfo();
				Thread.sleep(1000L);
				LargarOGarfo();
			}
			while (true);
		} catch (InterruptedException ex) {
			
			System.out.println("ERRO" + ex.getMessage());
			
			return;
		}
	}
	
	
	
}
